// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Project project_name {
  database_type: 'PostgreSQL'
  Note: 'ER Diagram for ft_transcendence'
}

Table user.account {
  id integer [ pk, unique, default:0, increment, not null ] // pk is not null.
  avatar text [ unique, not null ]
  nickname varchar(10) [ unique, not null ]
  win_count integer [ default:0, not null ]
  lose_count integer [ default:0, not null ]
  ladder_level enum [ not null, note: "bronze, silver, gold" ]
  created_at datetime [ not null ]
  updated_at datetime [ not null ]
}

Table user.follow {
  id integer [ pk, unique, default:0, increment, not null ]
  following_account_id integer [ not null ]
  followed_account_id integer [ not null ]
}

Ref: user.account.id < user.follow.following_account_id
Ref: user.account.id < user.follow.followed_account_id

Table user.match {
  id integer [ pk, unique, default:0, increment, not null ]
  type enum [ not null, note: "normal, rank" ]
  map_type enum [ not null, note: "normal, inverse, vertical, fast"]
  win_account_id integer [ not null ]
  lose_account_id integer [ not null ]
  match_at datetime [ not null ]
}

Ref: user.account.id < user.match.win_account_id
Ref: user.account.id < user.match.lose_account_id

Table chat.channel {
  id integer [ pk, unique, default:0, increment, not null ]
  owner_id integer [ not null ] 
  name text [ unique, not null ]
  type enum [ not null, note: "public, private, protected, one-to-one" ]
  created_at datetime [ not null ]
}

Ref: user.account.id < chat.channel.owner_id

Table chat.participant {
  id integer [ pk, unique, default:0, increment, not null ]
  channel_id integer [ not null ]
  user_id integer [ not null ]
}

Ref: user.account.id < chat.participant.user_id
Ref: chat.channel.id < chat.participant.channel_id

Table chat.administrator {
  id integer [ pk, unique, default:0, increment, not null ]
  channel_id integer [ not null ]
  user_id integer [ not null ]
  created_at datetime [ not null ]
}

Ref: user.account.id < chat.administrator.user_id
Ref: chat.channel.id < chat.administrator.channel_id

Table chat.banned {
  id integer [ pk, unique, default:0, increment, not null ]
  channel_id integer [ not null ]
  user_id integer [ not null ]
}

Ref: user.account.id < chat.banned.user_id
Ref: chat.channel.id < chat.banned.channel_id


Table chat.blocked {
  id integer [ pk, unique, default:0, increment, not null ]
  user_id integer [ not null ]
  target_id integer [ not null ]
}

Ref: user.account.id < chat.blocked.user_id
Ref: user.account.id < chat.blocked.target_id

Table chat.message {
  id integer [ pk, unique, default:0, increment, not null ]
  channel_id integer [ not null ]
  sender_id integer [ not null ]
  content text [ not null ]
  created_at datetime [ not null ]
}

Ref: user.account.id < chat.message.sender_id
Ref: chat.channel.id < chat.message.channel_id

Table chat.channel_password {
  id integer [ pk, unique, default:0, increment, not null ]
  channel_id integer [ not null ]
  password varchar(20) [ not null ]
}

Ref: chat.channel.id - chat.channel_password.channel_id